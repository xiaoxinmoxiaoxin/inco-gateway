server:
  port: 1000

spring:
  application:
    name: inco-gateway
  redis:
    host: 127.0.0.1
    port: 6379

  cloud:
    gateway:
      discovery:
        locator:
          #enabled: true
          lowerCaseServiceId: true

      globalcors: #跨域皮质
        cors-configurations:
          '[/**]':
            # 允许携带认证信息
            # 允许跨域的源(网站域名/ip)，设置*为全部
            # 允许跨域请求里的head字段，设置*为全部
            # 允许跨域的method， 默认为GET和OPTIONS，设置*为全部
            # 跨域允许的有效期
            allowCredentials: true
            allowedOrigins: "*"
            allowedHeaders: "*"
            allowedMethods: "*"
            max-age: 3600



      routes:
        - id: inco-xkgl
          uri: lb://inco-xkgl
          predicates:
            - Path=/inco-xkgl/**
          filters:
            - StripPrefix=1
            - name: Hystrix
              args:
                name: default
                fallbackUri: forward:/defaultfallback # 只有该id下的服务会降级
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1 #允许用户每秒处理多少个请求。
                redis-rate-limiter.burstCapacity: 1 #令牌桶的容量，允许在 1s 内完成的最大请求数。
                key-resolver: "#{@ipKeyResolver}"

            #重试
            - name: Retry
              args:
                retries: 3 #重试次数，默认值是 3 次。
                series: SERVER_ERROR #状态码配置（分段），符合某段状态码才会进行重试逻辑，默认值是 SERVER_ERROR，值是 5，也就是 5XX（5 开头的状态码），共有 5 个值，代码如下所示。
                statuses: INTERNAL_SERVER_ERROR
                methods: GET
                exceptions: java.lang.Exception


        - id: inco-xtgl
          uri: lb://inco-xtgl
          predicates:
            - Path=/inco-xtgl/**
          filters:
            - StripPrefix=1
             #熔断降级 当配置了熔断降级时 gateway的全局异常处理无效
            - name: Hystrix
              args:
                name: default
                fallbackUri: forward:/defaultfallback # 只有该id下的服务会降级
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1 #允许用户每秒处理多少个请求。
                redis-rate-limiter.burstCapacity: 1 #令牌桶的容量，允许在 1s 内完成的最大请求数。
                key-resolver: "#{@ipKeyResolver}"
            #重试
            - name: Retry
              args:
                retries: 3 #重试次数，默认值是 3 次。
                series: SERVER_ERROR #状态码配置（分段），符合某段状态码才会进行重试逻辑，默认值是 SERVER_ERROR，值是 5，也就是 5XX（5 开头的状态码），共有 5 个值，代码如下所示。
                statuses: INTERNAL_SERVER_ERROR
                methods: GET
                exceptions: java.lang.Exception
            #routes:
            #  - id: path_route
            #   uri: http://c.biancheng.net
            # predicates:
            # - Path=/spring_cloud

            #   - id: user-service
            #  uri: lb://user-service
            #  predicates:
          #    - Path=/user-service/**


hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: true
        isolation:
          thread:
            #feign整合hystrix 光设置Hystrix 超时没用的要配合ribbon超时
            timeoutInMilliseconds: 1000 #该配置需要比ribbon超时时间长
      circuitBreaker:
        #默认20 ，熔断的阈值，如何user服务报错满足3次，熔断器就会打开，就算order之后请求正确的数据也不行。
        requestVolumeThreshold: 1
        #默认5S ， 等5S之后熔断器会处于半开状态，然后下一次请求的正确和错误讲决定熔断器是否真的关闭和是否继续打开
        sleepWindowInMilliseconds: 1

  threadpool:
    default:
      coreSize: 60
      maxQueueSize: 200
      queueSizeRejectionThreshold: 200

ribbon:
  ReadTimeout: 500
  ConnectTimeout: 500
  ExecTimeout: 500
  MaxAutoRetries: 1 #最好设置超时重试


eureka:
  instance:
    hostname: localhost
    #Eureka Client 发送心跳给 server 端的频率。30s
    lease-renewal-interval-in-seconds: 5

    #    Eureka Server 至上一次收到 client 的心跳之后，等待下一次心跳的超时时间，在这个时间内若没收到下一次心跳，则移除该 Instance。90s
    lease-expiration-duration-in-seconds: 5

    #ip注册
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}



  client:
    # 由于该应用为注册中心, 所以设置为false, 代表不向注册中心注册自己
    registerWithEureka: true
    # 由于注册中心的职责就是维护服务实例, 并不需要检索服务, 所以也设置为 false
    fetchRegistry: true
    #开启健康检查
    healthcheck:
      enabled: true
    serviceUrl:
      defaultZone: http://xiaoxinmo:xiaoxinmo@localhost:8081/eureka/


